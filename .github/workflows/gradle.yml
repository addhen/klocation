# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_call:

permissions:
  contents: read

jobs:
  build:
    strategy:
      matrix:
        include:
          - target: iosSimulatorArm64Test
            os: macos-latest
          - target: iosX64Test
            os: macos-latest
          - target: testDebugUnitTest
            os: ubuntu-latest
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
    - name: Validate Gradle Wrapper
      uses: gradle/wrapper-validation-action@v3
    - uses: actions/cache@v4
      with:
        path: |
          ~/.konan
        key: ${{ runner.os }}-${{ hashFiles('**/.lock') }}
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
    - name: Spotless Check
      run: ./gradlew spotlessKtsCheck --stacktrace
    - name: Lint
      run: ./gradlew lint --stacktrace
    - name: Build with Gradle
      uses: gradle/actions/setup-gradle@v3
      with:
        arguments: ${{ matrix.target }}
    - name: Retrieve Version
      run: echo "VERSION_NAME=$(./gradlew -q --no-configuration-cache  printVersionName)" >> $GITHUB_ENV
    - name: Upload Snapshot
      uses: gradle/actions/setup-gradle@v3
      if: success() && endsWith(env.VERSION_NAME, '-SNAPSHOT')
      with:
        arguments: |
          --no-configuration-cache
          ${{ matrix.target }}
          closeSonatypeStagingRepository
          -Psigning.gnupg.passphrase='${{secrets.OSSRH_GPG_SECRET_KEY_PASSWORD}}'
          -Psigning.gnupg.keyName='${{secrets.OSSRH_GPG_SECRET_KEY_ID}}'
          -PsonatypeUsername='${{secrets.OSSRH_USERNAME}}'
          -PsonatypePassword='${{secrets.OSSRH_PASSWORD}}'
